Object GLAInfantryStingerAA 

  ; *** ART Parameters ***
  SelectPortrait         = UIStingerRebel_L
  ButtonImage            = UIStingerRebel_L
  
  UpgradeCameo1 = Upgrade_GLAAPRockets
  UpgradeCameo2 = Upgrade_GLAWorkerShoes

  Draw = W3DModelDraw ModuleTag_01
    OkToChangeModelColor = Yes

    DefaultConditionState
      Model = UISmsd_SKN
      IdleAnimation = UISmsd_SKL.UISmsd_STA 0 45
      IdleAnimation = UISmsd_SKL.UISmsd_STB
      IdleAnimation = UISmsd_SKL.UISmsd_IDA 
      IdleAnimation = UISmsd_SKL.UISmsd_IDB 
      IdleAnimation = UISmsd_SKL.UISmsd_IDC 
      IdleAnimation = UISmsd_SKL.UISmsd_IDD 
      AnimationMode = ONCE
      WeaponMuzzleFlash = SECONDARY MuzzleFX
      WeaponFireFXBone = SECONDARY Exhaust
      WeaponLaunchBone = SECONDARY Muzzle
    End

    ConditionState = MOVING
      Animation = UISmsd_SKL.UISmsd_WKA 25
      Animation = UISmsd_SKL.UISmsd_WKB 35
      AnimationMode = LOOP
      ParticleSysBone   = None InfantryDustTrails
    End

    ConditionState = DYING SPLATTED
      Animation = UISmsd_SKL.UISmsd_ADTF3
      Animation = UISmsd_SKL.UISmsd_ADTG23
      AnimationMode = ONCE
    End
    ConditionState = DYING
      Animation = UISmsd_SKL.UISmsd_DTA 
      Animation = UISmsd_SKL.UISmsd_DTB 
      AnimationMode = ONCE
      TransitionKey = TRANS_Dying
      WaitForStateToFinishIfPossible = NONE ; We got a Key from Default state, but Death does not need to wait for firing to finish
    End

    TransitionState = TRANS_Dying TRANS_Flailing
      Animation = UISmsd_SKL.UISmsd_ADTF1
      Animation = UISmsd_SKL.UISmsd_ADTG21
      AnimationMode = ONCE
    End

    ConditionState = DYING EXPLODED_FLAILING
      Animation = UISmsd_SKL.UISmsd_ADTF2
      Animation = UISmsd_SKL.UISmsd_ADTG22
      AnimationMode = LOOP
      TransitionKey = TRANS_Flailing
      WaitForStateToFinishIfPossible = NONE ; We got a Key from Default state, but Death does not need to wait for firing to finish
    End

    ConditionState = DYING EXPLODED_BOUNCING
      Animation = UISmsd_SKL.UISmsd_ADTF3
      Animation = UISmsd_SKL.UISmsd_ADTG23
      AnimationMode = ONCE
      TransitionKey = None
      WaitForStateToFinishIfPossible = NONE ; We got a Key from Default state, but Death does not need to wait for firing to finish
    End

    ConditionState = FIRING_A
      Animation = UISmsd_SKL.UISmsd_ATA
      AnimationMode = ONCE
      TransitionKey = TRANS_START_FIRING
    End
    ; AliasConditionState is a new keyword that says,
    ; "give me another ConditionState exactly like the previous
    ; one, except with different conditions". Useful when you
    ; have several states that are the same with only different condition bits.
    ; these aliases handle the moving-between-shots case. (we can't actually move-and-fire at the same time.).

    ConditionState = BETWEEN_FIRING_SHOTS_A
      Animation = UISmsd_SKL.UISmsd_STA
      AnimationMode = ONCE
      ; this is basically a trick: this guy has a nontrivial animation for firing,
      ; and a long recycle time between shots. we want him to finish his fire animation
      ; (unless he's ordered to do something else), so this is just a handy trick that
      ; says, "if the previous state had this transition key, allow it to finish before
      ; switching to us, if possible".
      WaitForStateToFinishIfPossible = TRANS_START_FIRING
    End

    AliasConditionState = RELOADING_A

    ConditionState = SPECIAL_CHEERING
      Animation = UISMSD_SKL.UISMSD_CHA
      AnimationMode = LOOP
    End

  End


  ; ***DESIGN parameters ***
  DisplayName      = OBJECT:StingerSoldier
  Side = GLA
  EditorSorting = INFANTRY
  TransportSlotCount = 1                 ;how many "slots" we take in a transport (0 == not transportable)
  WeaponSet
    Conditions = None
    Weapon = SECONDARY StingerSoldierWeaponAir
    Weapon = PRIMARY HoldFire
    Weapon = TERTIARY TerroristSuicideNotARealWeapon
  End

  ArmorSet
    Conditions      = None
    Armor           = HumanArmor
    DamageFX        = InfantryDamageFX
  End
  VisionRange = 330
  ShroudClearingRange = 190
  Prerequisites
  End
  BuildCost = 125
  BuildTime = 3.5          ;in seconds    

  ExperienceValue = 20 20 40 60    ;Experience point value at each level
  ExperienceRequired = 0 100 200 400  ;Experience points needed to gain each level
  IsTrainable = Yes             ;Can gain experience
  CrushableLevel         = 0  ;What am I?:        0 = for infantry, 1 = for trees, 2 = general vehicles
  CommandSet      = GenericCommandSet

  ; *** AUDIO Parameters ***
  VoiceSelect = StingerSelect
  VoiceMove = StingerMoving
  VoiceGuard = StingerMoving
  VoiceAttackAir     = StingerAttack
  VoiceFear = StingerFear
  SoundStealthOn = StealthOn
  SoundStealthOff = StealthOff
  UnitSpecificSounds
    VoiceCreate          = StingerCreate
    VoiceGarrison = StingerGarrison
    VoiceEnter = StingerMoving
    VoiceEnterHostile = StingerMoving
    VoiceGetHealed      = StingerMoving
  End

  ; *** ENGINEERING Parameters ***
  RadarPriority = UNIT
  KindOf = PRELOAD SELECTABLE CAN_ATTACK CAN_CAST_REFLECTIONS INFANTRY SCORE SALVAGER

  Body = ActiveBody ModuleTag_02
    MaxHealth       = 100.0
    InitialHealth   = 100.0
  End

  Behavior = AIUpdateInterface ModuleTag_03
    AutoAcquireEnemiesWhenIdle = Yes Stealthed
    MoodAttackCheckRate        = 750
  End
  Locomotor = SET_NORMAL GLALocomotorI2
  Behavior = PhysicsBehavior ModuleTag_04
    Mass = 5.0
  End

;Upgrades----------------------------------------------------------
  Behavior = FireWeaponWhenDeadBehavior Upgrade_01
    DeathWeapon   = Demo_SuicideDynamitePackPlusFire
    StartsActive  = No
    TriggeredBy   = Upgrade_AssaultCommandset
    DeathTypes = NONE +SUICIDED
    RequiresAllTriggers = Yes 
  End;
  Behavior = FireWeaponWhenDeadBehavior Upgrade_02
    DeathWeapon   = Demo_DestroyedWeapon
    StartsActive  = No
    TriggeredBy   = Upgrade_AssaultCommandset
    DeathTypes = ALL -SUICIDED
    RequiresAllTriggers = Yes
  End
  Behavior = VeterancyGainCreate Upgrade_09
     StartingLevel = VETERAN
     ScienceRequired = SCIENCE_GLAForeignInstructors
  End

  Behavior = MaxHealthUpgrade Upgrade_10
    TriggeredBy   = Upgrade_GLAWorkerShoes
    AddMaxHealth  = 20.0
    ChangeType    = ADD_CURRENT_HEALTH_TOO   ;Choices are PRESERVE_RATIO, ADD_CURRENT_HEALTH_TOO, and SAME_CURRENTHEALTH
  End
;Deaths-------------------------------------------------------------
 Behavior = SlowDeathBehavior DeathTag_01
    DeathTypes          = ALL -CRUSHED -SPLATTED -EXPLODED -BURNED -POISONED -POISONED_BETA -POISONED_GAMMA
    SinkDelay           = 3000
    SinkRate            = 0.5     ; in Dist/Sec
    DestructionDelay    = 8000
    FX                  = INITIAL FX_DieInfantryStinger
  End
  Behavior = SlowDeathBehavior DeathTag_02
    DeathTypes          = NONE +CRUSHED +SPLATTED
    SinkDelay           = 3000
    SinkRate            = 0.5     ; in Dist/Sec
    DestructionDelay    = 8000
    FX                  = INITIAL FX_GIDieCrushed
  End
  Behavior = SlowDeathBehavior DeathTag_03
    DeathTypes          = NONE +EXPLODED
    SinkDelay           = 3000
    SinkRate            = 0.5     ; in Dist/Sec
    DestructionDelay    = 8000
    FX                  = INITIAL FX_DieInfantryStinger
    FlingForce          = 8
    FlingForceVariance  = 3
    FlingPitch          = 60
    FlingPitchVariance  = 10
  End
  Behavior = SlowDeathBehavior DeathTag_04
    DeathTypes          = NONE +BURNED
    DestructionDelay    = 0
    FX                  = INITIAL FX_DieByFireChina
    OCL                 = INITIAL OCL_FlamingInfantry
  End
  Behavior = SlowDeathBehavior DeathTag_05
    DeathTypes          = NONE +POISONED
    DestructionDelay    = 0
    FX                  = INITIAL FX_DieByToxinChina
    OCL                 = INITIAL OCL_ToxicInfantry
  End
  Behavior = SlowDeathBehavior DeathTag_06 ; don't forget to give it a new, unique module tag
    DeathTypes          = NONE +POISONED_BETA
    DestructionDelay    = 0
    FX                  = INITIAL FX_DieByToxinChina
    OCL                 = INITIAL OCL_ToxicInfantryBeta ;you'll have to create this OCL and make it use the blue guys instead of green ones
  End
  Behavior = SlowDeathBehavior DeathTag_07
    DeathTypes          = NONE +POISONED_GAMMA
    DestructionDelay    = 0
    FX                  = INITIAL FX_DieByToxinGLA
    OCL                 = INITIAL OCL_ToxicInfantryGamma
  End
;Stealth-------------------------------------------------------------
  Behavior = StatusBitsUpgrade ModuleTag_StatusUpdateRAF
    TriggeredBy   = Upgrade_AssaultCommandset
    StatusToSet   = REASSIGN_PARKING
  End  
  Behavior = StealthUpdate ModuleStealth_GPSScramblerGenericStealthModule
    StealthDelay                = 2000 ; msec
    InnateStealth               = Yes
    StealthForbiddenConditions  = ATTACKING USING_ABILITY
    OrderIdleEnemiesToAttackMeUponReveal  = Yes
    RequiredStatus = REASSIGN_PARKING
  End
;---------------------------------------------------------------------

  Behavior = SquishCollide ModuleTag_05
    ;nothing
  End

  Behavior = PoisonedBehavior ModuleTag_06
    PoisonDamageInterval = 100  ; Every this many msec I will retake the poison damage dealt me...
    PoisonDuration = 3000       ; ... for this long after last hit by poison damage
  End

  Behavior = LockWeaponCreate ModuleTag_Lock
    SlotToLock = SECONDARY ; Prevents indeterminate state plus two unpickable weapons equaling no attack.
  End

  Geometry = CYLINDER
  GeometryMajorRadius = 8.0
  GeometryMinorRadius = 8.0
  GeometryHeight = 12.0
  GeometryIsSmall = Yes
  Shadow = SHADOW_DECAL
  ShadowSizeX = 14;
  ShadowSizeY = 14;
  ShadowTexture = ShadowI;
  BuildCompletion = APPEARS_AT_RALLY_POINT
  ;Scale = 0.94
End

;------------------------------------------------------------------------------
;(barracks stinger)
Object GLAInfantryStingerAA2 

  ; *** ART Parameters ***
  SelectPortrait         = UIStingerRebel_L
  ButtonImage            = UIStingerRebel_L
  
  UpgradeCameo1 = Upgrade_GLAAPRockets
  UpgradeCameo2 = Upgrade_GLAWorkerShoes

  Draw = W3DModelDraw ModuleTag_01
    OkToChangeModelColor = Yes

    DefaultConditionState
      Model = UISmsd_SKN
      IdleAnimation = UISmsd_SKL.UISmsd_STA 0 45
      IdleAnimation = UISmsd_SKL.UISmsd_STB
      IdleAnimation = UISmsd_SKL.UISmsd_IDA 
      IdleAnimation = UISmsd_SKL.UISmsd_IDB 
      IdleAnimation = UISmsd_SKL.UISmsd_IDC 
      IdleAnimation = UISmsd_SKL.UISmsd_IDD 
      AnimationMode = ONCE
      WeaponMuzzleFlash = SECONDARY MuzzleFX
      WeaponFireFXBone = SECONDARY Exhaust
      WeaponLaunchBone = SECONDARY Muzzle
    End

    ConditionState = MOVING
      Animation = UISmsd_SKL.UISmsd_WKA 25
      Animation = UISmsd_SKL.UISmsd_WKB 35
      AnimationMode = LOOP
      ParticleSysBone   = None InfantryDustTrails
    End

    ConditionState = DYING SPLATTED
      Animation = UISmsd_SKL.UISmsd_ADTF3
      Animation = UISmsd_SKL.UISmsd_ADTG23
      AnimationMode = ONCE
    End
    ConditionState = DYING
      Animation = UISmsd_SKL.UISmsd_DTA 
      Animation = UISmsd_SKL.UISmsd_DTB 
      AnimationMode = ONCE
      TransitionKey = TRANS_Dying
      WaitForStateToFinishIfPossible = NONE ; We got a Key from Default state, but Death does not need to wait for firing to finish
    End

    TransitionState = TRANS_Dying TRANS_Flailing
      Animation = UISmsd_SKL.UISmsd_ADTF1
      Animation = UISmsd_SKL.UISmsd_ADTG21
      AnimationMode = ONCE
    End

    ConditionState = DYING EXPLODED_FLAILING
      Animation = UISmsd_SKL.UISmsd_ADTF2
      Animation = UISmsd_SKL.UISmsd_ADTG22
      AnimationMode = LOOP
      TransitionKey = TRANS_Flailing
      WaitForStateToFinishIfPossible = NONE ; We got a Key from Default state, but Death does not need to wait for firing to finish
    End

    ConditionState = DYING EXPLODED_BOUNCING
      Animation = UISmsd_SKL.UISmsd_ADTF3
      Animation = UISmsd_SKL.UISmsd_ADTG23
      AnimationMode = ONCE
      TransitionKey = None
      WaitForStateToFinishIfPossible = NONE ; We got a Key from Default state, but Death does not need to wait for firing to finish
    End

    ConditionState = FIRING_A
      Animation = UISmsd_SKL.UISmsd_ATA
      AnimationMode = ONCE
      TransitionKey = TRANS_START_FIRING
    End
    ; AliasConditionState is a new keyword that says,
    ; "give me another ConditionState exactly like the previous
    ; one, except with different conditions". Useful when you
    ; have several states that are the same with only different condition bits.
    ; these aliases handle the moving-between-shots case. (we can't actually move-and-fire at the same time.).

    ConditionState = BETWEEN_FIRING_SHOTS_A
      Animation = UISmsd_SKL.UISmsd_STA
      AnimationMode = ONCE
      ; this is basically a trick: this guy has a nontrivial animation for firing,
      ; and a long recycle time between shots. we want him to finish his fire animation
      ; (unless he's ordered to do something else), so this is just a handy trick that
      ; says, "if the previous state had this transition key, allow it to finish before
      ; switching to us, if possible".
      WaitForStateToFinishIfPossible = TRANS_START_FIRING
    End

    AliasConditionState = RELOADING_A

    ConditionState = SPECIAL_CHEERING
      Animation = UISMSD_SKL.UISMSD_CHA
      AnimationMode = LOOP
    End

  End


  ; ***DESIGN parameters ***
  DisplayName      = OBJECT:StingerSoldier
  Side = GLA
  EditorSorting = INFANTRY
  TransportSlotCount = 1                 ;how many "slots" we take in a transport (0 == not transportable)
  WeaponSet
    Conditions = None
    Weapon = SECONDARY StingerSoldierWeaponAir
    Weapon = PRIMARY HoldFire
  End

  ArmorSet
    Conditions      = None
    Armor           = HumanArmor
    DamageFX        = InfantryDamageFX
  End
  VisionRange = 330
  ShroudClearingRange = 190
  Prerequisites
  End
  BuildCost = 125
  BuildTime = 3.5          ;in seconds    

  ExperienceValue = 20 20 40 60    ;Experience point value at each level
  ExperienceRequired = 0 100 200 400  ;Experience points needed to gain each level
  IsTrainable = Yes             ;Can gain experience
  CrushableLevel         = 0  ;What am I?:        0 = for infantry, 1 = for trees, 2 = general vehicles
  CommandSet      = GenericCommandSet

  ; *** AUDIO Parameters ***
  VoiceSelect = StingerSelect
  VoiceMove = StingerMoving
  VoiceGuard = StingerGuard
  VoiceAttackAir     = StingerAttack
  VoiceFear = StingerFear
  UnitSpecificSounds
    VoiceCreate          = StingerCreate
    VoiceGarrison = StingerGarrison
    VoiceEnter = StingerMoving
    VoiceEnterHostile = StingerMoving
    VoiceGetHealed      = StingerMoving
  End

  ; *** ENGINEERING Parameters ***
  RadarPriority = UNIT
  KindOf = PRELOAD SELECTABLE CAN_ATTACK CAN_CAST_REFLECTIONS INFANTRY SCORE SALVAGER

  Body = ActiveBody ModuleTag_02
    MaxHealth       = 100.0
    InitialHealth   = 100.0
  End

  Behavior = AIUpdateInterface ModuleTag_03
    AutoAcquireEnemiesWhenIdle = Yes Stealthed
    MoodAttackCheckRate        = 750
  End
  Locomotor = SET_NORMAL GLALocomotorI2
  Behavior = PhysicsBehavior ModuleTag_04
    Mass = 5.0
  End

;Upgrades----------------------------------------------------------
  Behavior = VeterancyGainCreate Upgrade_09
     StartingLevel = VETERAN
     ScienceRequired = SCIENCE_GLAForeignInstructors
  End

  Behavior = MaxHealthUpgrade Upgrade_10
    TriggeredBy   = Upgrade_GLAWorkerShoes
    AddMaxHealth  = 20.0
    ChangeType    = ADD_CURRENT_HEALTH_TOO   ;Choices are PRESERVE_RATIO, ADD_CURRENT_HEALTH_TOO, and SAME_CURRENTHEALTH
  End
;Deaths-------------------------------------------------------------
 Behavior = SlowDeathBehavior DeathTag_01
    DeathTypes          = ALL -CRUSHED -SPLATTED -EXPLODED -BURNED -POISONED -POISONED_BETA -POISONED_GAMMA
    SinkDelay           = 3000
    SinkRate            = 0.5     ; in Dist/Sec
    DestructionDelay    = 8000
    FX                  = INITIAL FX_DieInfantryStinger
  End
  Behavior = SlowDeathBehavior DeathTag_02
    DeathTypes          = NONE +CRUSHED +SPLATTED
    SinkDelay           = 3000
    SinkRate            = 0.5     ; in Dist/Sec
    DestructionDelay    = 8000
    FX                  = INITIAL FX_GIDieCrushed
  End
  Behavior = SlowDeathBehavior DeathTag_03
    DeathTypes          = NONE +EXPLODED
    SinkDelay           = 3000
    SinkRate            = 0.5     ; in Dist/Sec
    DestructionDelay    = 8000
    FX                  = INITIAL FX_DieInfantryStinger
    FlingForce          = 8
    FlingForceVariance  = 3
    FlingPitch          = 60
    FlingPitchVariance  = 10
  End
  Behavior = SlowDeathBehavior DeathTag_04
    DeathTypes          = NONE +BURNED
    DestructionDelay    = 0
    FX                  = INITIAL FX_DieByFireChina
    OCL                 = INITIAL OCL_FlamingInfantry
  End
  Behavior = SlowDeathBehavior DeathTag_05
    DeathTypes          = NONE +POISONED
    DestructionDelay    = 0
    FX                  = INITIAL FX_DieByToxinChina
    OCL                 = INITIAL OCL_ToxicInfantry
  End
  Behavior = SlowDeathBehavior DeathTag_06 ; don't forget to give it a new, unique module tag
    DeathTypes          = NONE +POISONED_BETA
    DestructionDelay    = 0
    FX                  = INITIAL FX_DieByToxinChina
    OCL                 = INITIAL OCL_ToxicInfantryBeta ;you'll have to create this OCL and make it use the blue guys instead of green ones
  End
  Behavior = SlowDeathBehavior DeathTag_07
    DeathTypes          = NONE +POISONED_GAMMA
    DestructionDelay    = 0
    FX                  = INITIAL FX_DieByToxinGLA
    OCL                 = INITIAL OCL_ToxicInfantryGamma
  End
;Stealth-------------------------------------------------------------
  Behavior = StatusBitsUpgrade ModuleTag_StatusUpdateRAF
    TriggeredBy   = Upgrade_AssaultCommandset
    StatusToSet   = REASSIGN_PARKING
  End  
  Behavior = StealthUpdate ModuleStealth_GPSScramblerGenericStealthModule
    StealthDelay                = 2000 ; msec
    InnateStealth               = Yes
    StealthForbiddenConditions  = ATTACKING USING_ABILITY
    OrderIdleEnemiesToAttackMeUponReveal  = Yes
    RequiredStatus = REASSIGN_PARKING
  End
;---------------------------------------------------------------------

  Behavior = SquishCollide ModuleTag_05
    ;nothing
  End

  Behavior = PoisonedBehavior ModuleTag_06
    PoisonDamageInterval = 100  ; Every this many msec I will retake the poison damage dealt me...
    PoisonDuration = 3000       ; ... for this long after last hit by poison damage
  End

  Behavior = LockWeaponCreate ModuleTag_Lock
    SlotToLock = SECONDARY ; Prevents indeterminate state plus two unpickable weapons equaling no attack.
  End

  Geometry = CYLINDER
  GeometryMajorRadius = 6.0
  GeometryMinorRadius = 6.0
  GeometryHeight = 12.0
  GeometryIsSmall = Yes
  Shadow = SHADOW_DECAL
  ShadowSizeX = 14;
  ShadowSizeY = 14;
  ShadowTexture = ShadowI;
  BuildCompletion = APPEARS_AT_RALLY_POINT
  ;Scale = 0.94
End
;------------------------------------------------------------------------------
Object GLAInfantryTruckStinger1 

  ; *** ART Parameters ***
  SelectPortrait         = UIStingerRebel_L
  ButtonImage            = UIStingerRebel_L
  
  UpgradeCameo1 = Upgrade_GLAAPRockets
  UpgradeCameo2 = Upgrade_GLAWorkerShoes

  Draw = W3DDependencyModelDraw  ModuleTag_01
    OkToChangeModelColor = Yes
    AttachToBoneInContainer = FIREPOINT01


    DefaultConditionState
      Model = UISmsd_SKN
      Turret              = UISmsd_SKL
      IdleAnimation = UISmsd_SKL.UISmsd_STA 0 45
      IdleAnimation = UISmsd_SKL.UISmsd_STB
      IdleAnimation = UISmsd_SKL.UISmsd_IDA 
      IdleAnimation = UISmsd_SKL.UISmsd_IDB 
      IdleAnimation = UISmsd_SKL.UISmsd_IDC 
      IdleAnimation = UISmsd_SKL.UISmsd_IDD 
      AnimationMode = ONCE
      WeaponMuzzleFlash = PRIMARY MuzzleFX
      WeaponFireFXBone = PRIMARY Exhaust
      WeaponLaunchBone = PRIMARY Muzzle
    End
    AliasConditionState = GARRISONED

    ConditionState = MOVING
      Model = UISmsd_SKN
      Animation = UISmsd_SKL.UISmsd_WKA 25
      Animation = UISmsd_SKL.UISmsd_WKB 35
      AnimationMode = LOOP
      ParticleSysBone   = None InfantryDustTrails
    End

    ConditionState = DYING SPLATTED
      Model = UISmsd_SKN
      Animation = UISmsd_SKL.UISmsd_ADTF3
      Animation = UISmsd_SKL.UISmsd_ADTG23
      AnimationMode = ONCE
    End
    ConditionState = DYING
      Model = UISmsd_SKN
      Animation = UISmsd_SKL.UISmsd_DTA 
      Animation = UISmsd_SKL.UISmsd_DTB 
      AnimationMode = ONCE
      TransitionKey = TRANS_Dying
      WaitForStateToFinishIfPossible = NONE ; We got a Key from Default state, but Death does not need to wait for firing to finish
    End

    TransitionState = TRANS_Dying TRANS_Flailing
      Model = UISmsd_SKN
      Animation = UISmsd_SKL.UISmsd_ADTF1
      Animation = UISmsd_SKL.UISmsd_ADTG21
      AnimationMode = ONCE
    End

    ConditionState = DYING EXPLODED_FLAILING
      Model = UISmsd_SKN
      Animation = UISmsd_SKL.UISmsd_ADTF2
      Animation = UISmsd_SKL.UISmsd_ADTG22
      AnimationMode = LOOP
      TransitionKey = TRANS_Flailing
      WaitForStateToFinishIfPossible = NONE ; We got a Key from Default state, but Death does not need to wait for firing to finish
    End

    ConditionState = DYING EXPLODED_BOUNCING
      Model = UISmsd_SKN
      Animation = UISmsd_SKL.UISmsd_ADTF3
      Animation = UISmsd_SKL.UISmsd_ADTG23
      AnimationMode = ONCE
      TransitionKey = None
      WaitForStateToFinishIfPossible = NONE ; We got a Key from Default state, but Death does not need to wait for firing to finish
    End

    ConditionState = FIRING_A
      Model = UISmsd_SKN
      Animation = UISmsd_SKL.UISmsd_ATA
      AnimationMode = ONCE
      TransitionKey = TRANS_START_FIRING
    End
    ; AliasConditionState is a new keyword that says,
    ; "give me another ConditionState exactly like the previous
    ; one, except with different conditions". Useful when you
    ; have several states that are the same with only different condition bits.
    ; these aliases handle the moving-between-shots case. (we can't actually move-and-fire at the same time.).

    ConditionState = BETWEEN_FIRING_SHOTS_A
      Model = UISmsd_SKN
      Animation = UISmsd_SKL.UISmsd_STA
      AnimationMode = ONCE
      ; this is basically a trick: this guy has a nontrivial animation for firing,
      ; and a long recycle time between shots. we want him to finish his fire animation
      ; (unless he's ordered to do something else), so this is just a handy trick that
      ; says, "if the previous state had this transition key, allow it to finish before
      ; switching to us, if possible".
      WaitForStateToFinishIfPossible = TRANS_START_FIRING
    End

    AliasConditionState = RELOADING_A

    ConditionState = SPECIAL_CHEERING
      Model = UISmsd_SKN
      Animation = UISMSD_SKL.UISMSD_CHA
      AnimationMode = LOOP
    End

  End


  ; ***DESIGN parameters ***
  DisplayName      = OBJECT:StingerSoldier
  Side = GLA
  EditorSorting = INFANTRY
  TransportSlotCount = 1                 ;how many "slots" we take in a transport (0 == not transportable)
  WeaponSet
    Conditions = None
    Weapon = PRIMARY StingerTrkMissileWeaponAir
  End

  ArmorSet
    Conditions      = None
    Armor           = HumanArmor
    DamageFX        = InfantryDamageFX
  End
  VisionRange = 350
  ShroudClearingRange = 190
  Prerequisites
  End
  BuildCost = 125
  BuildTime = 3.5          ;in seconds    

  ExperienceValue = 20 20 40 60    ;Experience point value at each level
  ExperienceRequired = 0 75 150 300  ;Experience points needed to gain each level
  IsTrainable = Yes             ;Can gain experience
  CrushableLevel         = 0  ;What am I?:        0 = for infantry, 1 = for trees, 2 = general vehicles
  CommandSet      = GenericCommandSet

  ; *** AUDIO Parameters ***
  VoiceSelect = StingerSelect
  VoiceMove = StingerMoving
  VoiceGuard = StingerGuard
  VoiceAttackAir     = StingerAttack
  VoiceFear = StingerFear
  UnitSpecificSounds
    VoiceCreate          = StingerCreate
    VoiceGarrison = StingerGarrison
    VoiceEnter = StingerMoving
    VoiceEnterHostile = StingerMoving
    VoiceGetHealed      = StingerMoving
  End

  ; *** ENGINEERING Parameters ***
  RadarPriority = UNIT
  KindOf = PRELOAD SELECTABLE CAN_ATTACK CAN_CAST_REFLECTIONS PORTABLE_STRUCTURE SCORE SALVAGER

  Body = ActiveBody ModuleTag_02
    MaxHealth       = 100.0
    InitialHealth   = 100.0
  End

  Behavior = AIUpdateInterface ModuleTag_03
    Turret
      TurretTurnRate = 240 ;30 ;15   // turn rate, in degrees per sec
      ControlledWeaponSlots = PRIMARY
      RecenterTime = 5000   ; how long to wait during idle before recentering
      FiresWhileTurning     = Yes
    End
    AutoAcquireEnemiesWhenIdle = Yes
    MoodAttackCheckRate        = 750
  End
  Locomotor = SET_NORMAL GLALocomotorI2
  Behavior = PhysicsBehavior ModuleTag_05
    Mass = 5.0
  End

;Upgrades----------------------------------------------------------
  Behavior = MaxHealthUpgrade Upgrade_10
    TriggeredBy   = Upgrade_GLAWorkerShoes
    AddMaxHealth  = 20.0
    ChangeType    = ADD_CURRENT_HEALTH_TOO   ;Choices are PRESERVE_RATIO, ADD_CURRENT_HEALTH_TOO, and SAME_CURRENTHEALTH
  End
;Deaths-------------------------------------------------------------
Behavior = SlowDeathBehavior DeathTag_01
    DeathTypes          = ALL -CRUSHED -SPLATTED -EXPLODED -BURNED -POISONED -POISONED_BETA -POISONED_GAMMA
    SinkDelay           = 3000
    SinkRate            = 0.5     ; in Dist/Sec
    DestructionDelay    = 8000
    FX                  = INITIAL FX_DieInfantryStinger
  End
  Behavior = SlowDeathBehavior DeathTag_02
    DeathTypes          = NONE +CRUSHED +SPLATTED
    SinkDelay           = 3000
    SinkRate            = 0.5     ; in Dist/Sec
    DestructionDelay    = 8000
    FX                  = INITIAL FX_GIDieCrushed
  End
  Behavior = SlowDeathBehavior DeathTag_03
    DeathTypes          = NONE +EXPLODED
    SinkDelay           = 3000
    SinkRate            = 0.5     ; in Dist/Sec
    DestructionDelay    = 8000
    FX                  = INITIAL FX_DieInfantryStinger
    FlingForce          = 8
    FlingForceVariance  = 3
    FlingPitch          = 60
    FlingPitchVariance  = 10
  End
  Behavior = SlowDeathBehavior DeathTag_04
    DeathTypes          = NONE +BURNED
    DestructionDelay    = 0
    FX                  = INITIAL FX_DieByFireChina
    OCL                 = INITIAL OCL_FlamingInfantry
  End
  Behavior = SlowDeathBehavior DeathTag_05
    DeathTypes          = NONE +POISONED
    DestructionDelay    = 0
    FX                  = INITIAL FX_DieByToxinChina
    OCL                 = INITIAL OCL_ToxicInfantry
  End
  Behavior = SlowDeathBehavior DeathTag_06
    DeathTypes          = NONE +POISONED_BETA
    DestructionDelay    = 0
    FX                  = INITIAL FX_DieByToxinChina
    OCL                 = INITIAL OCL_ToxicInfantryBeta
  End
  Behavior = SlowDeathBehavior DeathTag_07
    DeathTypes          = NONE +POISONED_GAMMA
    DestructionDelay    = 0
    FX                  = INITIAL FX_DieByToxinGLA
    OCL                 = INITIAL OCL_ToxicInfantryGamma
  End
;Stealth-------------------------------------------------------------
;---------------------------------------------------------------------

  Behavior = SquishCollide ModuleTag_06
    ;nothing
  End

  Behavior = PoisonedBehavior ModuleTag_08
    PoisonDamageInterval = 100  ; Every this many msec I will retake the poison damage dealt me...
    PoisonDuration = 3000       ; ... for this long after last hit by poison damage
  End

  Geometry = CYLINDER
  GeometryMajorRadius = 6.0
  GeometryMinorRadius = 6.0
  GeometryHeight = 12.0
  GeometryIsSmall = Yes
  Shadow = SHADOW_DECAL
  ShadowSizeX = 14;
  ShadowSizeY = 14;
  ShadowTexture = ShadowI;
  BuildCompletion = APPEARS_AT_RALLY_POINT
  Scale = 0.97
End