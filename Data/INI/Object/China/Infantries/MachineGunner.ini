Object ChinaInfantryMachineGunner

  ; *** ART Parameters ***
  SelectPortrait         = MachineGunner-ic_L
  ButtonImage            = MachineGunner-ic_L
  
  UpgradeCameo1 = Upgrade_Nationalism
  UpgradeCameo2 = Upgrade_China_ChemSuits
  UpgradeCameo3 = Upgrade_ChinaChainGuns

  Draw = W3DModelDraw ModuleTag_01
    OkToChangeModelColor = Yes
  
  
    DefaultConditionState
      Model             = NIMNG_SKN
      IdleAnimation     = AISTNG_SKL.AISTNG_STA2
      IdleAnimation     = AISTNG_SKL.AISTNG_STA4
      IdleAnimation     = AISTNG_SKL.AISTNG_STA3
      AnimationMode     = ONCE
      AnimationSpeedFactorRange = 0.8 1.2
      TransitionKey     = TRANS_Stand
      WeaponMuzzleFlash = PRIMARY MuzzleFX
      WeaponFireFXBone  = PRIMARY Muzzle
      WeaponLaunchBone  = PRIMARY Muzzle
      WeaponLaunchBone  = SECONDARY Muzzle

    End
    AliasConditionState = REALLYDAMAGED

    ConditionState      = FIRING_A
      Animation         = AISTNG_SKL.AISTNG_ATA3
      AnimationMode     = ONCE
      TransitionKey     = TRANS_START_FIRING
    End
    AliasConditionState = FIRING_A REALLYDAMAGED

    ConditionState      = BETWEEN_FIRING_SHOTS_A
      Animation         = AISTNG_SKL.AISTNG_ATA3
      AnimationMode     = ONCE
      ; this is basically a trick: this guy has a nontrivial animation for firing,
      ; and a long recycle time between shots. we want him to finish his fire animation
      ; (unless he's ordered to do something else), so this is just a handy trick that
      ; says, "if the previous state had this transition key, allow it to finish before
      ; switching to us, if possible".
      WaitForStateToFinishIfPossible = TRANS_START_FIRING
    End
    AliasConditionState = BETWEEN_FIRING_SHOTS_A REALLYDAMAGED

    ConditionState      = MOVING
      Animation         = AISTNG_SKL.AISTNG_RNA 45
      AnimationMode     = LOOP
      Flags             = RANDOMSTART
      TransitionKey     = None
      ParticleSysBone   = None InfantryDustTrails
    End
    AliasConditionState = MOVING REALLYDAMAGED

    ConditionState      = RELOADING_A
      Animation         = AISTNG_SKL.AISTNG_STA3
      AnimationMode     = ONCE
      ;AnimationSpeedFactorRange = 1.8 3.0
      ;WeaponLaunchBone = PRIMARY WeaponA
    End
    AliasConditionState = MOVING RELOADING_A
    AliasConditionState = MOVING RELOADING_A REALLYDAMAGED

    ;Deployed Death animations
    ConditionState              = DEPLOYED DYING
      Animation                 = AISTNG_SKL.AISTNG_DTA
      Animation                 = AISTNG_SKL.AISTNG_DTB
      AnimationSpeedFactorRange = 0.9 1.25
      AnimationMode             = ONCE
      TransitionKey             = TRANS_Dying
    End
    
    ;Regulair Death animations
    ConditionState      = DYING
      Animation         = AISTNG_SKL.AISTNG_DTA
      Animation         = AISTNG_SKL.AISTNG_DTB
      AnimationSpeedFactorRange = 0.9 1.25
      AnimationMode     = ONCE
      TransitionKey     = TRANS_Dying
    End

    ;PARACHUTING ANIMATIONS
    ConditionState      = FREEFALL
      Animation         = AISTNG_SKL.AISTNG_PFL
      AnimationMode     = LOOP
      TransitionKey     = TRANS_Falling
    End
    AliasConditionState = FREEFALL REALLYDAMAGED
    AliasConditionState = FREEFALL DYING

    ConditionState      = PARACHUTING
      Animation         = AISTNG_SKL.AISTNG_PHG
      AnimationMode     = LOOP
      Flags             = PRISTINE_BONE_POS_IN_FINAL_FRAME  ; our bone positions should come from the last frame, rather than the first
      TransitionKey     = TRANS_Chute
    End
    AliasConditionState = PARACHUTING REALLYDAMAGED
    AliasConditionState = PARACHUTING DYING

    TransitionState     = TRANS_Falling TRANS_Chute
      Animation         = AISTNG_SKL.AISTNG_POP
      AnimationMode     = ONCE
      Flags             = PRISTINE_BONE_POS_IN_FINAL_FRAME  ; our bone positions should come from the last frame, rather than the first
    End

    TransitionState     = TRANS_Chute TRANS_Stand
      Animation         = AISTNG_SKL.AISTNG_PTD
      AnimationMode     = ONCE
    End

  End


  ; ***DESIGN parameters ***
  DisplayName      = OBJECT:Machinegunner
  Side = China
  EditorSorting = INFANTRY
  TransportSlotCount = 1                 ;how many "slots" we take in a transport (0 == not transportable)
  WeaponSet
    Conditions = None 
    Weapon = PRIMARY W85-MachineGunWeapon
  End

  ArmorSet
    Conditions      = None
    Armor           = AdvancedHumanArmor
    DamageFX        = InfantryDamageFX
  End

  ArmorSet
    Conditions      = PLAYER_UPGRADE
    Armor           = AdvancedChemSuitHumanArmor
    DamageFX        = InfantryDamageFX
  End


  VisionRange = 275
  ShroudClearingRange = 190
  Prerequisites
    Object = ChinaPropagandaCenter
    ;Science = SCIENCE_Rank2
  End
  BuildCost = 300
  BuildTime = 12.0          ;in seconds    

  ExperienceValue         = 35 35 55 80  ;Experience point value at each level
  ExperienceRequired      = 0 100 200 325   ;Experience points needed to gain each level
  IsTrainable = Yes             ;Can gain experience
  CrushableLevel         = 2  ;What am I?:        0 = for infantry, 1 = for trees, 2 = general vehicles
  CommandSet      = ChinaVehicleBattleMasterCommandSet

  ; *** AUDIO Parameters ***
  VoiceSelect = MGSelect
  VoiceMove = MGMove
  VoiceGuard = MGGuard
  VoiceAttack = MGAttack
  VoiceGroupSelect = BattleCrySound
  VoiceFear = MGFear
  VoiceTaskComplete = RedGuardVoiceCaptureComplete
  UnitSpecificSounds
    VoiceMelee      = RedGuardVoiceAttackBayonet
    VoiceGarrison   = MGGarrison
    VoiceCreate     = MGCreate
    VoiceSubdue     = RedGuardVoiceSubdue
    VoiceEnter      = MGMove
    VoiceEnterHostile = MGMove
    VoiceGetHealed      = MGMove
  End

  ; *** ENGINEERING Parameters ***
  RadarPriority = UNIT
  KindOf = PRELOAD SELECTABLE CAN_ATTACK ATTACK_NEEDS_LINE_OF_SIGHT CAN_CAST_REFLECTIONS INFANTRY SCORE

  Body = ActiveBody ModuleTag_02
    MaxHealth       = 100.0
    InitialHealth   = 100.0
  End

  Behavior = AIUpdateInterface ModuleTag_03
    AutoAcquireEnemiesWhenIdle = Yes
  End

  Behavior = HordeUpdate ModuleTag_04
    RubOffRadius = 60    ; if I am this close to a real hordesman, I will get to be an honorary hordesman
    UpdateRate = 1000    ; how often to recheck horde status (msec)
    Radius = 50          ; how close other units must be to us to count towards our horde-ness (~30 feet or so)
    KindOf = INFANTRY    ; what KindOf's must match to count towards horde-ness
    AlliesOnly = Yes     ; do we only count allies towards horde status? 
    ExactMatch = No      ; do we only count units of our exact same type towards horde status? (overrides kindof)
    Count = 5            ; how many units must be within Radius to grant us horde-ness
    Action = HORDE       ; when horde-ing, grant us the HORDE bonus
  End

  Locomotor = SET_NORMAL ChinaLocomotorI4
  Locomotor = SET_NORMAL_UPGRADED ChinaLocomotorI4B

  Behavior = PhysicsBehavior ModuleTag_05
    Mass = 5.0
  End

;Upgrades----------------------------------------------------------
  Behavior = LocomotorSetUpgrade Upgrade_01
    TriggeredBy = Upgrade_BallisticCommandset
  End  
  Behavior = WeaponBonusUpgrade Upgrade_02
    TriggeredBy = Upgrade_ChinaChainGuns
  End
  Behavior                = ArmorUpgrade ModuleTag_Armor01
    TriggeredBy           = Upgrade_China_ChemSuits
  End
;Deaths-------------------------------------------------------------
; --- begin Death modules ---
  Behavior = SlowDeathBehavior DeathTag_01
    DeathTypes          = ALL -CRUSHED -SPLATTED -EXPLODED -BURNED -POISONED -POISONED_BETA -POISONED_GAMMA
    SinkDelay           = 3000
    SinkRate            = 0.5     ; in Dist/Sec
    DestructionDelay    = 8000
    FX                  = INITIAL FX_SoldierDie
  End
  Behavior = SlowDeathBehavior DeathTag_02
    DeathTypes          = NONE +CRUSHED +SPLATTED
    SinkDelay           = 3000
    SinkRate            = 0.5     ; in Dist/Sec
    DestructionDelay    = 8000
    FX                  = INITIAL FX_GIDieCrushed
  End
  Behavior = SlowDeathBehavior DeathTag_03
    DeathTypes          = NONE +EXPLODED
    SinkDelay           = 3000
    SinkRate            = 0.5     ; in Dist/Sec
    DestructionDelay    = 8000
    FX                  = INITIAL FX_SoldierDie
    FlingForce          = 8
    FlingForceVariance  = 3
    FlingPitch          = 60
    FlingPitchVariance  = 10
  End
  Behavior = SlowDeathBehavior DeathTag_04
    DeathTypes          = NONE +BURNED
    DestructionDelay    = 0
    FX                  = INITIAL FX_DieByFireChina
    OCL                 = INITIAL OCL_FlamingInfantry
  End
  Behavior = SlowDeathBehavior DeathTag_05
    DeathTypes          = NONE +POISONED
    DestructionDelay    = 0
    FX                  = INITIAL FX_DieByToxinChina
    OCL                 = INITIAL OCL_ToxicInfantry
  End
  Behavior = SlowDeathBehavior DeathTag_06 ; don't forget to give it a new, unique module tag
    DeathTypes          = NONE +POISONED_BETA
    DestructionDelay    = 0
    FX                  = INITIAL FX_DieByToxinChina
    OCL                 = INITIAL OCL_ToxicInfantryBeta ;you'll have to create this OCL and make it use the blue guys instead of green ones
  End
  Behavior = SlowDeathBehavior DeathTag_07
    DeathTypes          = NONE +POISONED_GAMMA
    DestructionDelay    = 0
    FX                  = INITIAL FX_DieByToxinGLA
    OCL                 = INITIAL OCL_ToxicInfantryGamma
  End
; --- end Death modules ---
;Stealth-------------------------------------------------------------
;---------------------------------------------------------------------

  Behavior = PoisonedBehavior ModuleTag_07
    PoisonDamageInterval = 100  ; Every this many msec I will retake the poison damage dealt me...
    PoisonDuration = 3000       ; ... for this long after last hit by poison damage
  End

  Behavior = StealthUpdate ModuleStealth_GPSScramblerGenericStealthModule
    StealthDelay                = 2000 ; msec
    InnateStealth               = Yes
    StealthForbiddenConditions  = ATTACKING USING_ABILITY
    OrderIdleEnemiesToAttackMeUponReveal  = Yes
    RequiredStatus = REASSIGN_PARKING
  End

  Geometry = CYLINDER
  GeometryMajorRadius = 6.0
  GeometryMinorRadius = 6.0
  GeometryHeight = 12.0
  GeometryIsSmall = Yes
  Shadow = SHADOW_DECAL
  ShadowSizeX = 14;
  ShadowSizeY = 14;
  ShadowTexture = ShadowI;
  BuildCompletion = APPEARS_AT_RALLY_POINT
  ;Scale = 0.94
End

Object ChinaInfantryMachineGunnerMMF

  ; *** ART Parameters ***
  SelectPortrait         = MachineGunner-ic_L
  ButtonImage            = MachineGunner-ic_L
  
  UpgradeCameo1 = Upgrade_Nationalism
  UpgradeCameo2 = Upgrade_China_ChemSuits
  UpgradeCameo3 = Upgrade_ChinaChainGuns

  Draw = W3DModelDraw ModuleTag_01
    OkToChangeModelColor = Yes
  
  
    DefaultConditionState
      Model             = NIMNG_SKN
      IdleAnimation     = AISTNG_SKL.AISTNG_STA2
      IdleAnimation     = AISTNG_SKL.AISTNG_STA4
      IdleAnimation     = AISTNG_SKL.AISTNG_STA3
      AnimationMode     = ONCE
      AnimationSpeedFactorRange = 0.8 1.2
      TransitionKey     = TRANS_Stand
      WeaponMuzzleFlash = PRIMARY MuzzleFX
      WeaponFireFXBone  = PRIMARY Muzzle
      WeaponLaunchBone  = PRIMARY Muzzle
      WeaponLaunchBone  = SECONDARY Muzzle

    End
    AliasConditionState = REALLYDAMAGED

    ConditionState      = FIRING_A
      Animation         = AISTNG_SKL.AISTNG_ATA3
      AnimationMode     = ONCE
      TransitionKey     = TRANS_START_FIRING
    End
    AliasConditionState = FIRING_A REALLYDAMAGED

    ConditionState      = BETWEEN_FIRING_SHOTS_A
      Animation         = AISTNG_SKL.AISTNG_ATA3
      AnimationMode     = ONCE
      ; this is basically a trick: this guy has a nontrivial animation for firing,
      ; and a long recycle time between shots. we want him to finish his fire animation
      ; (unless he's ordered to do something else), so this is just a handy trick that
      ; says, "if the previous state had this transition key, allow it to finish before
      ; switching to us, if possible".
      WaitForStateToFinishIfPossible = TRANS_START_FIRING
    End
    AliasConditionState = BETWEEN_FIRING_SHOTS_A REALLYDAMAGED

    ConditionState      = MOVING
      Animation         = AISTNG_SKL.AISTNG_RNA 45
      AnimationMode     = LOOP
      Flags             = RANDOMSTART
      TransitionKey     = None
      ParticleSysBone   = None InfantryDustTrails
    End
    AliasConditionState = MOVING REALLYDAMAGED

    ConditionState      = RELOADING_A
      Animation         = AISTNG_SKL.AISTNG_STA3
      AnimationMode     = ONCE
      ;AnimationSpeedFactorRange = 1.8 3.0
      ;WeaponLaunchBone = PRIMARY WeaponA
    End
    AliasConditionState = MOVING RELOADING_A
    AliasConditionState = MOVING RELOADING_A REALLYDAMAGED

    ;Deployed Death animations
    ConditionState              = DEPLOYED DYING
      Animation                 = AISTNG_SKL.AISTNG_DTA
      Animation                 = AISTNG_SKL.AISTNG_DTB
      AnimationSpeedFactorRange = 0.9 1.25
      AnimationMode             = ONCE
      TransitionKey             = TRANS_Dying
    End
    
    ;Regulair Death animations
    ConditionState      = DYING
      Animation         = AISTNG_SKL.AISTNG_DTA
      Animation         = AISTNG_SKL.AISTNG_DTB
      AnimationSpeedFactorRange = 0.9 1.25
      AnimationMode     = ONCE
      TransitionKey     = TRANS_Dying
    End

    ;PARACHUTING ANIMATIONS
    ConditionState      = FREEFALL
      Animation         = AISTNG_SKL.AISTNG_PFL
      AnimationMode     = LOOP
      TransitionKey     = TRANS_Falling
    End
    AliasConditionState = FREEFALL REALLYDAMAGED
    AliasConditionState = FREEFALL DYING

    ConditionState      = PARACHUTING
      Animation         = AISTNG_SKL.AISTNG_PHG
      AnimationMode     = LOOP
      Flags             = PRISTINE_BONE_POS_IN_FINAL_FRAME  ; our bone positions should come from the last frame, rather than the first
      TransitionKey     = TRANS_Chute
    End
    AliasConditionState = PARACHUTING REALLYDAMAGED
    AliasConditionState = PARACHUTING DYING

    TransitionState     = TRANS_Falling TRANS_Chute
      Animation         = AISTNG_SKL.AISTNG_POP
      AnimationMode     = ONCE
      Flags             = PRISTINE_BONE_POS_IN_FINAL_FRAME  ; our bone positions should come from the last frame, rather than the first
    End

    TransitionState     = TRANS_Chute TRANS_Stand
      Animation         = AISTNG_SKL.AISTNG_PTD
      AnimationMode     = ONCE
    End

  End


  ; ***DESIGN parameters ***
  DisplayName      = OBJECT:Machinegunner
  Side = China
  EditorSorting = INFANTRY
  TransportSlotCount = 1                 ;how many "slots" we take in a transport (0 == not transportable)
  WeaponSet
    Conditions = None 
    Weapon = PRIMARY W85-MachineGunWeapon
  End

  ArmorSet
    Conditions      = None
    Armor           = AdvancedHumanArmor
    DamageFX        = InfantryDamageFX
  End

  ArmorSet
    Conditions      = PLAYER_UPGRADE
    Armor           = AdvancedChemSuitHumanArmor
    DamageFX        = InfantryDamageFX
  End

  VisionRange = 275
  ShroudClearingRange = 190
  Prerequisites
    Object = ChinaPropagandaCenter
    ;Science = SCIENCE_Rank2
  End
  BuildCost = 300
  BuildTime = 12.0          ;in seconds    

  ExperienceValue         = 35 35 55 80  ;Experience point value at each level
  ExperienceRequired      = 0 100 200 325   ;Experience points needed to gain each level
  IsTrainable = Yes             ;Can gain experience
  CrushableLevel         = 2  ;What am I?:        0 = for infantry, 1 = for trees, 2 = general vehicles
  CommandSet      = ChinaVehicleBattleMasterCommandSet

  ; *** AUDIO Parameters ***
  VoiceSelect = MGSelect
  VoiceMove = MGMove
  VoiceGuard = MGGuard
  VoiceAttack = MGAttack
  VoiceGroupSelect = BattleCrySound
  VoiceFear = MGFear
  VoiceTaskComplete = RedGuardVoiceCaptureComplete
  UnitSpecificSounds
    VoiceMelee      = RedGuardVoiceAttackBayonet
    VoiceGarrison   = MGGarrison
    VoiceCreate     = MGCreate
    VoiceSubdue     = RedGuardVoiceSubdue
    VoiceEnter      = MGMove
    VoiceEnterHostile = MGMove
    VoiceGetHealed      = MGMove
  End

  ; *** ENGINEERING Parameters ***
  RadarPriority = UNIT
  KindOf = PRELOAD SELECTABLE CAN_ATTACK ATTACK_NEEDS_LINE_OF_SIGHT CAN_CAST_REFLECTIONS INFANTRY SCORE

  Body = ActiveBody ModuleTag_02
    MaxHealth       = 100.0
    InitialHealth   = 100.0
  End

  Behavior = AIUpdateInterface ModuleTag_03
    AutoAcquireEnemiesWhenIdle = Yes
  End

  Behavior = HordeUpdate ModuleTag_04
    RubOffRadius = 60    ; if I am this close to a real hordesman, I will get to be an honorary hordesman
    UpdateRate = 1000    ; how often to recheck horde status (msec)
    Radius = 50          ; how close other units must be to us to count towards our horde-ness (~30 feet or so)
    KindOf = INFANTRY    ; what KindOf's must match to count towards horde-ness
    AlliesOnly = Yes     ; do we only count allies towards horde status? 
    ExactMatch = No      ; do we only count units of our exact same type towards horde status? (overrides kindof)
    Count = 5            ; how many units must be within Radius to grant us horde-ness
    Action = HORDE       ; when horde-ing, grant us the HORDE bonus
  End

  Locomotor = SET_NORMAL ChinaLocomotorI4
  Locomotor = SET_NORMAL_UPGRADED ChinaLocomotorI4B

;Upgrades----------------------------------------------------------
  Behavior = LocomotorSetUpgrade Upgrade_01
    TriggeredBy = Upgrade_BallisticCommandset
  End  
  Behavior = WeaponBonusUpgrade Upgrade_02
    TriggeredBy = Upgrade_ChinaChainGuns
  End
  Behavior                = ArmorUpgrade ModuleTag_Armor01
    TriggeredBy           = Upgrade_China_ChemSuits
  End
;Deaths-------------------------------------------------------------
; --- begin Death modules ---
  Behavior = SlowDeathBehavior DeathTag_01
    DeathTypes          = ALL -CRUSHED -SPLATTED -EXPLODED -BURNED -POISONED -POISONED_BETA -POISONED_GAMMA
    SinkDelay           = 3000
    SinkRate            = 0.5     ; in Dist/Sec
    DestructionDelay    = 8000
    FX                  = INITIAL FX_SoldierDie
  End
  Behavior = SlowDeathBehavior DeathTag_02
    DeathTypes          = NONE +CRUSHED +SPLATTED
    SinkDelay           = 3000
    SinkRate            = 0.5     ; in Dist/Sec
    DestructionDelay    = 8000
    FX                  = INITIAL FX_GIDieCrushed
  End
  Behavior = SlowDeathBehavior DeathTag_03
    DeathTypes          = NONE +EXPLODED
    SinkDelay           = 3000
    SinkRate            = 0.5     ; in Dist/Sec
    DestructionDelay    = 8000
    FX                  = INITIAL FX_SoldierDie
    FlingForce          = 8
    FlingForceVariance  = 3
    FlingPitch          = 60
    FlingPitchVariance  = 10
  End
  Behavior = SlowDeathBehavior DeathTag_04
    DeathTypes          = NONE +BURNED
    DestructionDelay    = 0
    FX                  = INITIAL FX_DieByFireChina
    OCL                 = INITIAL OCL_FlamingInfantry
  End
  Behavior = SlowDeathBehavior DeathTag_05
    DeathTypes          = NONE +POISONED
    DestructionDelay    = 0
    FX                  = INITIAL FX_DieByToxinChina
    OCL                 = INITIAL OCL_ToxicInfantry
  End
  Behavior = SlowDeathBehavior DeathTag_06 ; don't forget to give it a new, unique module tag
    DeathTypes          = NONE +POISONED_BETA
    DestructionDelay    = 0
    FX                  = INITIAL FX_DieByToxinChina
    OCL                 = INITIAL OCL_ToxicInfantryBeta ;you'll have to create this OCL and make it use the blue guys instead of green ones
  End
  Behavior = SlowDeathBehavior DeathTag_07
    DeathTypes          = NONE +POISONED_GAMMA
    DestructionDelay    = 0
    FX                  = INITIAL FX_DieByToxinGLA
    OCL                 = INITIAL OCL_ToxicInfantryGamma
  End
; --- end Death modules ---
;Stealth-------------------------------------------------------------
;---------------------------------------------------------------------

  Behavior = PhysicsBehavior ModuleTag_05
    Mass = 5.0
  End

  Behavior = SquishCollide ModuleTag_06
    ;nothing
  End

  Behavior = PoisonedBehavior ModuleTag_08
    PoisonDamageInterval = 100  ; Every this many msec I will retake the poison damage dealt me...
    PoisonDuration = 3000       ; ... for this long after last hit by poison damage
  End

  Behavior = StealthUpdate ModuleStealth_GPSScramblerGenericStealthModule
    StealthDelay                = 2000 ; msec
    InnateStealth               = Yes
    StealthForbiddenConditions  = ATTACKING USING_ABILITY
    OrderIdleEnemiesToAttackMeUponReveal  = Yes
    RequiredStatus = REASSIGN_PARKING
  End

  Geometry = CYLINDER
  GeometryMajorRadius = 6.0
  GeometryMinorRadius = 6.0
  GeometryHeight = 12.0
  GeometryIsSmall = Yes
  Shadow = SHADOW_DECAL
  ShadowSizeX = 14;
  ShadowSizeY = 14;
  ShadowTexture = ShadowI;
  BuildCompletion = APPEARS_AT_RALLY_POINT
  ;Scale = 0.94
End