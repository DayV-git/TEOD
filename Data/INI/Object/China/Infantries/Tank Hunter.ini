Object ChinaInfantryTankHunter

  ; *** ART Parameters ***
  SelectPortrait         = TankHunter-ic_L
  ButtonImage            = TankHunter-ic_L
  
  UpgradeCameo1 = Upgrade_Nationalism
  UpgradeCameo2 = Upgrade_China_ChemSuits
  UpgradeCameo3 = Upgrade_China_EMPMissiles
  UpgradeCameo4 = Upgrade_FosofrusMortar
  ;UpgradeCameo5 = NONE

  Draw = W3DModelDraw ModuleTag_01
    OkToChangeModelColor = Yes
  
  
    DefaultConditionState
      Model             = NIMSST_SKN
      IdleAnimation     = NIMSST_SKL.NIMSST_STA 0 30
      IdleAnimation     = NIMSST_SKL.NIMSST_IDA
      IdleAnimation     = NIMSST_SKL.NIMSST_IDB
      AnimationMode     = ONCE
      AnimationSpeedFactorRange = 0.8 1.2
      TransitionKey     = TRANS_Stand
      WeaponMuzzleFlash = PRIMARY MuzzleFX
      WeaponFireFXBone  = PRIMARY Muzzle
      WeaponLaunchBone  = PRIMARY Muzzle
      WeaponLaunchBone  = SECONDARY Muzzle
      WeaponMuzzleFlash = SECONDARY MuzzleFX
      WeaponFireFXBone  = SECONDARY Muzzle
    End
    AliasConditionState = REALLYDAMAGED

    ConditionState      = FIRING_A 
      Animation         = NIMSST_SKL.NIMSST_ATA 
      AnimationMode     = ONCE
      TransitionKey     = TRANS_START_FIRING
    End
    AliasConditionState = REALLYDAMAGED FIRING_A
    AliasConditionState = FIRING_B
    AliasConditionState = REALLYDAMAGED FIRING_B
    
    ConditionState      = BETWEEN_FIRING_SHOTS_A
      Animation         = NIMSST_SKL.NIMSST_STA
      AnimationMode     = ONCE
      ; this is basically a trick: this guy has a nontrivial animation for firing,
      ; and a long recycle time between shots. we want him to finish his fire animation
      ; (unless he's ordered to do something else), so this is just a handy trick that
      ; says, "if the previous state had this transition key, allow it to finish before
      ; switching to us, if possible".
      WaitForStateToFinishIfPossible = TRANS_START_FIRING
    End
    AliasConditionState = REALLYDAMAGED BETWEEN_FIRING_SHOTS_A
    AliasConditionState = BETWEEN_FIRING_SHOTS_B
    AliasConditionState = REALLYDAMAGED BETWEEN_FIRING_SHOTS_B

    ConditionState      = MOVING
      Animation         = NIMSST_SKL.NIMSST_RNA 25
      AnimationMode     = LOOP
      Flags             = RANDOMSTART
      TransitionKey     = None
      ParticleSysBone   = None InfantryDustTrails
    End
    AliasConditionState = REALLYDAMAGED MOVING
    AliasConditionState = MOVING ATTACKING
    AliasConditionState = MOVING ATTACKING REALLYDAMAGED

    ConditionState      = RELOADING_A
      Animation         = NIMSST_SKL.NIMSST_ATA 10
      AnimationMode     = ONCE
      ;WeaponLaunchBone = PRIMARY WeaponA
    End
    AliasConditionState = MOVING RELOADING_A
    AliasConditionState = REALLYDAMAGED MOVING RELOADING_A

    ConditionState      = DYING
      Animation         = NIMSST_SKL.NIMSST_DTA
      Animation         = NIMSST_SKL.NIMSST_DTB
      AnimationSpeedFactorRange = 0.9 1.25
      AnimationMode     = ONCE
      TransitionKey     = TRANS_Dying
    End
    AliasConditionState = DYING RUBBLE

    TransitionState     = TRANS_Dying TRANS_Flailing
      Animation         = NIMSST_SKL.NIMSST_ADTD1
      AnimationMode     = ONCE
    End

    ConditionState      = DYING EXPLODED_FLAILING
      Animation         = NIMSST_SKL.NIMSST_ADTD2
      AnimationMode     = LOOP
      TransitionKey     = TRANS_Flailing
    End

    ConditionState      = DYING EXPLODED_BOUNCING
      Animation         = NIMSST_SKL.NIMSST_ADTD3
      AnimationMode     = ONCE
      TransitionKey     = None
    End

    ;PARACHUTING ANIMATIONS
    ConditionState      = FREEFALL
      Animation         = NIMSST_SKL.NIMSST_POP
      AnimationMode     = ONCE
      TransitionKey     = TRANS_Falling
    End
    AliasConditionState = FREEFALL REALLYDAMAGED
    AliasConditionState = FREEFALL DYING
    
    ConditionState      = PARACHUTING
      Animation         = NIMSST_SKL.NIMSST_PHG
      AnimationMode     = LOOP
      Flags             = PRISTINE_BONE_POS_IN_FINAL_FRAME  ; our bone positions should come from the last frame, rather than the first
      TransitionKey     = TRANS_Chute
    End
    AliasConditionState = PARACHUTING REALLYDAMAGED
    AliasConditionState = PARACHUTING DYING
    
   ; TransitionState     = TRANS_Falling TRANS_Chute
   ;   Animation         = NIMSST_SKL.NIMSST_POP
   ;   AnimationMode     = ONCE
   ;   Flags             = PRISTINE_BONE_POS_IN_FINAL_FRAME  ; our bone positions should come from the last frame, rather than the first
   ; End
    
    TransitionState     = TRANS_Chute TRANS_Stand
      Animation         = NIMSST_SKL.NIMSST_PDN
      AnimationMode     = ONCE
    End


  ConditionState = USER_1
      Model             = NIMSST_SKN_G
      IdleAnimation     = NIMSST_SKL.NIMSST_STA 0 30
      IdleAnimation     = NIMSST_SKL.NIMSST_IDA
      IdleAnimation     = NIMSST_SKL.NIMSST_IDB
      AnimationMode     = ONCE
      AnimationSpeedFactorRange = 0.8 1.2
      TransitionKey     = USER_1 TRANS_Stand
      WeaponMuzzleFlash = PRIMARY MuzzleFX
      WeaponFireFXBone  = PRIMARY Muzzle
      WeaponLaunchBone  = PRIMARY Muzzle
      WeaponLaunchBone  = SECONDARY Muzzle
      WeaponMuzzleFlash = SECONDARY MuzzleFX
      WeaponFireFXBone  = SECONDARY Muzzle
    End
    AliasConditionState = USER_1 REALLYDAMAGED

    ConditionState      = USER_1 FIRING_A
      Model             = NIMSST_SKN_G
      Animation         = NIMSST_SKL.NIMSST_ATA 
      AnimationMode     = ONCE
      TransitionKey     = USER_1 TRANS_START_FIRING
    End
    AliasConditionState = USER_1 REALLYDAMAGED FIRING_A
    AliasConditionState = USER_1 FIRING_B
    AliasConditionState = USER_1 REALLYDAMAGED FIRING_B
    
    ConditionState      = USER_1 BETWEEN_FIRING_SHOTS_A
      Model             = NIMSST_SKN_G
      Animation         = NIMSST_SKL.NIMSST_STA
      AnimationMode     = ONCE
      ; this is basically a trick: this guy has a nontrivial animation for firing,
      ; and a long recycle time between shots. we want him to finish his fire animation
      ; (unless he's ordered to do something else), so this is just a handy trick that
      ; says, "if the previous state had this transition key, allow it to finish before
      ; switching to us, if possible".
      WaitForStateToFinishIfPossible = USER_1 TRANS_START_FIRING
    End
    AliasConditionState = USER_1 REALLYDAMAGED BETWEEN_FIRING_SHOTS_A
    AliasConditionState = USER_1 BETWEEN_FIRING_SHOTS_B
    AliasConditionState = USER_1 REALLYDAMAGED BETWEEN_FIRING_SHOTS_B

    ConditionState      = USER_1 MOVING
      Model             = NIMSST_SKN_G
      Animation         = NIMSST_SKL.NIMSST_RNA 25
      AnimationMode     = LOOP
      Flags             = RANDOMSTART
      TransitionKey     = None
      ParticleSysBone   = None InfantryDustTrails
    End
    AliasConditionState = USER_1 REALLYDAMAGED MOVING
    AliasConditionState = USER_1 MOVING ATTACKING
    AliasConditionState = USER_1 MOVING ATTACKING REALLYDAMAGED

    ConditionState      = USER_1 RELOADING_A
      Model             = NIMSST_SKN_G
      Animation         = NIMSST_SKL.NIMSST_ATA 10
      AnimationMode     = ONCE
      ;WeaponLaunchBone = PRIMARY WeaponA
    End
    AliasConditionState = USER_1 MOVING RELOADING_A
    AliasConditionState = USER_1 REALLYDAMAGED MOVING RELOADING_A

    ConditionState      = USER_1 DYING
      Model             = NIMSST_SKN_G
      Animation         = NIMSST_SKL.NIMSST_DTA
      Animation         = NIMSST_SKL.NIMSST_DTB
      AnimationSpeedFactorRange = 0.9 1.25
      AnimationMode     = ONCE
      TransitionKey     = USER_1 TRANS_Dying
    End
    AliasConditionState = USER_1 DYING RUBBLE

    TransitionState     = USER_1 TRANS_Dying TRANS_Flailing
      Model             = NIMSST_SKN_G
      Animation         = NIMSST_SKL.NIMSST_ADTD1
      AnimationMode     = ONCE
    End

    ConditionState      = USER_1 DYING EXPLODED_FLAILING
      Model             = NIMSST_SKN_G
      Animation         = NIMSST_SKL.NIMSST_ADTD2
      AnimationMode     = LOOP
      TransitionKey     = USER_1 TRANS_Flailing
    End

    ConditionState      = USER_1 DYING EXPLODED_BOUNCING
      Model             = NIMSST_SKN_G
      Animation         = NIMSST_SKL.NIMSST_ADTD3
      AnimationMode     = ONCE
      TransitionKey     = None
    End

    ;PARACHUTING ANIMATIONS
    ConditionState      = USER_1 FREEFALL
      Model             = NIMSST_SKN_G
      Animation         = NIMSST_SKL.NIMSST_POP
      AnimationMode     = ONCE
      TransitionKey     = USER_1 TRANS_Falling
    End
    AliasConditionState = USER_1 FREEFALL REALLYDAMAGED
    AliasConditionState = USER_1 FREEFALL DYING
    
    ConditionState      = USER_1 PARACHUTING
      Model             = NIMSST_SKN_G
      Animation         = NIMSST_SKL.NIMSST_PHG
      AnimationMode     = LOOP
      Flags             = PRISTINE_BONE_POS_IN_FINAL_FRAME  ; our bone positions should come from the last frame, rather than the first
      TransitionKey     = USER_1 TRANS_Chute
    End
    AliasConditionState = USER_1 PARACHUTING REALLYDAMAGED
    AliasConditionState = USER_1 PARACHUTING DYING
    
    
    TransitionState     = USER_1 TRANS_Chute TRANS_Stand
      Model             = NIMSST_SKN_G
      Animation         = NIMSST_SKL.NIMSST_PDN
      AnimationMode     = ONCE
    End


  End


  ; ***DESIGN parameters ***
  DisplayName      = OBJECT:TankHunter
  Side = China
  EditorSorting = INFANTRY
  TransportSlotCount = 1                 ;how many "slots" we take in a transport (0 == not transportable)
  WeaponSet
    Conditions = None 
    Weapon = PRIMARY ChinaInfantryTankHunterMissileLauncher
  End

  WeaponSet
    Conditions = PLAYER_UPGRADE 
    Weapon = PRIMARY ChinaInfantryTankHunterMissileLauncher
    Weapon = SECONDARY ChinaInfantryTankHunterMissileLauncher_EMP
    AutoChooseSources = SECONDARY NONE
    ShareWeaponReloadTime = Yes
  End

  ArmorSet
    Conditions      = None
    Armor           = HumanArmor
    DamageFX        = InfantryDamageFX
  End

  ArmorSet
    Conditions      = PLAYER_UPGRADE
    Armor           = ChemSuitHumanArmor
    DamageFX        = InfantryDamageFX
  End
  VisionRange = 220
  ShroudClearingRange = 200
  Prerequisites
    Object = ChinaBarracks
  End
  BuildCost = 200
  BuildTime = 6          ;in seconds    

  ExperienceValue         = 25 25 45 70  ;Experience point value at each level
  ExperienceRequired      = 0 50 150 250   ;Experience points needed to gain each level
  IsTrainable = Yes             ;Can gain experience
  CrushableLevel         = 0  ;What am I?:        0 = for infantry, 1 = for trees, 2 = general vehicles
  CommandSet      = ChinaInfantryTankHunterCommandSet

  ; *** AUDIO Parameters ***
  VoiceSelect = TankHunterVoiceSelect
  VoiceMove = TankHunterVoiceMove
  VoiceAttack = TankHunterVoiceAttack
  VoiceAttackAir = TankHunterVoiceAttack
  VoiceGuard = TankHunterVoiceMove
  VoiceFear = TankHunterVoiceFear
  UnitSpecificSounds
    VoiceCreate          = TankHunterVoiceCreate
    VoiceGarrison = TankHunterVoiceGarrison
    VoiceEnter = TankHunterVoiceMove
    VoiceEnterHostile = TankHunterVoiceMove
    VoiceGetHealed      = TankHunterVoiceMove
  End

  ; *** ENGINEERING Parameters ***
  RadarPriority = UNIT
  KindOf = PRELOAD SELECTABLE CAN_ATTACK ATTACK_NEEDS_LINE_OF_SIGHT CAN_CAST_REFLECTIONS INFANTRY SCORE

  Body = ActiveBody ModuleTag_02
    MaxHealth       = 110.0
    InitialHealth   = 110.0
  End

  Behavior = AIUpdateInterface ModuleTag_03
    AutoAcquireEnemiesWhenIdle = Yes
    MoodAttackCheckRate        = 750
  End
  Locomotor = SET_NORMAL ChinaLocomotorI2
  Locomotor = SET_NORMAL_UPGRADED ChinaLocomotorI2B

  Behavior = HordeUpdate ModuleTag_04
    RubOffRadius = 60    ; if I am this close to a real hordesman, I will get to be an honorary hordesman
    UpdateRate = 1000    ; how often to recheck horde status (msec)
    Radius = 50          ; how close other units must be to us to count towards our horde-ness (~30 feet or so)
    KindOf = INFANTRY    ; what KindOf's must match to count towards horde-ness
    AlliesOnly = Yes     ; do we only count allies towards horde status? 
    ExactMatch = No      ; do we only count units of our exact same type towards horde status? (overrides kindof)
    Count = 5            ; how many units must be within Radius to grant us horde-ness
    Action = HORDE       ; when horde-ing, grant us the HORDE bonus
  End
  Behavior = PhysicsBehavior ModuleTag_05
    Mass = 5.0
  End

;Upgrades----------------------------------------------------------
  Behavior = LocomotorSetUpgrade Upgrade_01
    TriggeredBy = Upgrade_BallisticCommandset
  End  
  Behavior = WeaponSetUpgrade Upgrade_02
    TriggeredBy = Upgrade_China_EMPMissiles
  End

  Behavior = CommandSetUpgrade Upgrade_03
    TriggeredBy = Upgrade_China_EMPMissiles
    CommandSet = ChinaInfantryTankHunterCommandSet_EMP
  End
  Behavior = CommandSetUpgrade Upgrade_04
    TriggeredBy = Upgrade_ArmorCommandset
    CommandSet = ChinaInfantryTankHunterCommandSet_EMP
  End
  Behavior                = ArmorUpgrade ModuleTag_Armor01
    TriggeredBy           = Upgrade_China_ChemSuits
  End

  Behavior = ModelConditionUpgrade ModuleTag_ChemSuits01
    ConditionFlag = USER_1
    TriggeredBy = Upgrade_China_ChemSuits
  End
;Deaths-------------------------------------------------------------
  Behavior = SlowDeathBehavior DeathTag_01
    DeathTypes          = ALL -CRUSHED -SPLATTED -EXPLODED -BURNED -POISONED -POISONED_BETA -POISONED_GAMMA
    SinkDelay           = 3000
    SinkRate            = 0.5     ; in Dist/Sec
    DestructionDelay    = 8000
    FX                  = INITIAL FX_SoldierDie
  End
  Behavior = SlowDeathBehavior DeathTag_02
    DeathTypes          = NONE +CRUSHED +SPLATTED
    SinkDelay           = 3000
    SinkRate            = 0.5     ; in Dist/Sec
    DestructionDelay    = 8000
    FX                  = INITIAL FX_GIDieCrushed
  End
  Behavior = SlowDeathBehavior DeathTag_03
    DeathTypes          = NONE +EXPLODED
    SinkDelay           = 3000
    SinkRate            = 0.5     ; in Dist/Sec
    DestructionDelay    = 8000
    FX                  = INITIAL FX_SoldierDie
    FlingForce          = 8
    FlingForceVariance  = 3
    FlingPitch          = 60
    FlingPitchVariance  = 10
  End
  Behavior = SlowDeathBehavior DeathTag_04
    DeathTypes          = NONE +BURNED
    DestructionDelay    = 0
    FX                  = INITIAL FX_DieByFireChina
    OCL                 = INITIAL OCL_FlamingInfantry
  End
  Behavior = SlowDeathBehavior DeathTag_05
    DeathTypes          = NONE +POISONED
    DestructionDelay    = 0
    FX                  = INITIAL FX_DieByToxinChina
    OCL                 = INITIAL OCL_ToxicInfantry
  End
  Behavior = SlowDeathBehavior DeathTag_06 ; don't forget to give it a new, unique module tag
    DeathTypes          = NONE +POISONED_BETA
    DestructionDelay    = 0
    FX                  = INITIAL FX_DieByToxinChina
    OCL                 = INITIAL OCL_ToxicInfantryBeta ;you'll have to create this OCL and make it use the blue guys instead of green ones
  End
  Behavior = SlowDeathBehavior DeathTag_07
    DeathTypes          = NONE +POISONED_GAMMA
    DestructionDelay    = 0
    FX                  = INITIAL FX_DieByToxinChina
    OCL                 = INITIAL OCL_ToxicInfantryGamma
  End

;Stealth-------------------------------------------------------------
;---------------------------------------------------------------------

  Behavior = SpecialAbility ModuleTag_06
    SpecialPowerTemplate = SpecialAbilityTankHunterTNTAttack
    UpdateModuleStartsAttack = Yes
    InitiateSound = TankHunterVoiceTNT
  End
  Behavior = SpecialAbilityUpdate ModuleTag_07
    SpecialPowerTemplate = SpecialAbilityTankHunterTNTAttack
    StartAbilityRange = 5.0
    PreparationTime = 0
    SpecialObject = TNTStickyBomb
    MaxSpecialObjects = 8
    SpecialObjectsPersistWhenOwnerDies = Yes ;Charges are removed instantly when owner dies (nobody can detonate).
    SpecialObjectsPersistent = Yes          ;Charges are persistent till lifetime expires or owner detonates them.
    UniqueSpecialObjectTargets = Yes        ;This prevents multiple charges placed on the same object.
    FleeRangeAfterCompletion = 100.0         ;Runs away after finishing ability
  End

  Behavior = SquishCollide ModuleTag_08
    ;nothing
  End

  Behavior = PoisonedBehavior ModuleTag_09
    PoisonDamageInterval = 100  ; Every this many msec I will retake the poison damage dealt me...
    PoisonDuration = 3000       ; ... for this long after last hit by poison damage
  End

  Behavior = StealthUpdate ModuleStealth_GPSScramblerGenericStealthModule
    StealthDelay                = 2000 ; msec
    InnateStealth               = Yes
    StealthForbiddenConditions  = ATTACKING USING_ABILITY
    OrderIdleEnemiesToAttackMeUponReveal  = Yes
    RequiredStatus = REASSIGN_PARKING
  End

  Geometry = CYLINDER
  GeometryMajorRadius = 6.0
  GeometryMinorRadius = 6.0
  GeometryHeight = 12.0
  GeometryIsSmall = Yes
  Shadow = SHADOW_DECAL
  ShadowSizeX = 14;
  ShadowSizeY = 14;
  ShadowTexture = ShadowI;
  BuildCompletion = APPEARS_AT_RALLY_POINT

End

Object ChinaInfantryTankHunterMMF

  ; *** ART Parameters ***
  SelectPortrait         = TankHunter-ic_L
  ButtonImage            = TankHunter-ic_L
  
  UpgradeCameo1 = Upgrade_Nationalism
  UpgradeCameo2 = Upgrade_China_ChemSuits
  ;UpgradeCameo3 = NONE
  ;UpgradeCameo4 = NONE
  ;UpgradeCameo5 = NONE

  Draw = W3DModelDraw ModuleTag_01
    OkToChangeModelColor = Yes
  
  
    DefaultConditionState
      Model             = NIMSST_SKN
      IdleAnimation     = NIMSST_SKL.NIMSST_STA 0 30
      IdleAnimation     = NIMSST_SKL.NIMSST_IDA
      IdleAnimation     = NIMSST_SKL.NIMSST_IDB
      AnimationMode     = ONCE
      AnimationSpeedFactorRange = 0.8 1.2
      TransitionKey     = TRANS_Stand
      WeaponMuzzleFlash = PRIMARY MuzzleFX
      WeaponFireFXBone  = PRIMARY Muzzle
      WeaponLaunchBone  = PRIMARY Muzzle
      WeaponLaunchBone  = SECONDARY Muzzle
    End
    AliasConditionState = REALLYDAMAGED

    ConditionState      = FIRING_A 
      Animation         = NIMSST_SKL.NIMSST_ATA 
      AnimationMode     = ONCE
      TransitionKey     = TRANS_START_FIRING
    End
    AliasConditionState = REALLYDAMAGED FIRING_A
    
    ConditionState      = BETWEEN_FIRING_SHOTS_A
      Animation         = NIMSST_SKL.NIMSST_STA
      AnimationMode     = ONCE
      ; this is basically a trick: this guy has a nontrivial animation for firing,
      ; and a long recycle time between shots. we want him to finish his fire animation
      ; (unless he's ordered to do something else), so this is just a handy trick that
      ; says, "if the previous state had this transition key, allow it to finish before
      ; switching to us, if possible".
      WaitForStateToFinishIfPossible = TRANS_START_FIRING
    End
    AliasConditionState = REALLYDAMAGED BETWEEN_FIRING_SHOTS_A

    ConditionState      = MOVING
      Animation         = NIMSST_SKL.NIMSST_RNA 25
      AnimationMode     = LOOP
      Flags             = RANDOMSTART
      TransitionKey     = None
      ParticleSysBone   = None InfantryDustTrails
    End
    AliasConditionState = REALLYDAMAGED MOVING
    AliasConditionState = MOVING ATTACKING
    AliasConditionState = MOVING ATTACKING REALLYDAMAGED

    ConditionState      = RELOADING_A
      Animation         = NIMSST_SKL.NIMSST_ATA 10
      AnimationMode     = ONCE
      ;WeaponLaunchBone = PRIMARY WeaponA
    End
    AliasConditionState = MOVING RELOADING_A
    AliasConditionState = REALLYDAMAGED MOVING RELOADING_A

    ConditionState      = DYING
      Animation         = NIMSST_SKL.NIMSST_DTA
      Animation         = NIMSST_SKL.NIMSST_DTB
      AnimationSpeedFactorRange = 0.9 1.25
      AnimationMode     = ONCE
      TransitionKey     = TRANS_Dying
    End
    AliasConditionState = DYING RUBBLE

    TransitionState     = TRANS_Dying TRANS_Flailing
      Animation         = NIMSST_SKL.NIMSST_ADTD1
      AnimationMode     = ONCE
    End

    ConditionState      = DYING EXPLODED_FLAILING
      Animation         = NIMSST_SKL.NIMSST_ADTD2
      AnimationMode     = LOOP
      TransitionKey     = TRANS_Flailing
    End

    ConditionState      = DYING EXPLODED_BOUNCING
      Animation         = NIMSST_SKL.NIMSST_ADTD3
      AnimationMode     = ONCE
      TransitionKey     = None
    End

    ;PARACHUTING ANIMATIONS
    ConditionState      = FREEFALL
      Animation         = NIMSST_SKL.NIMSST_POP
      AnimationMode     = ONCE
      TransitionKey     = TRANS_Falling
    End
    AliasConditionState = FREEFALL REALLYDAMAGED
    AliasConditionState = FREEFALL DYING
    
    ConditionState      = PARACHUTING
      Animation         = NIMSST_SKL.NIMSST_PHG
      AnimationMode     = LOOP
      Flags             = PRISTINE_BONE_POS_IN_FINAL_FRAME  ; our bone positions should come from the last frame, rather than the first
      TransitionKey     = TRANS_Chute
    End
    AliasConditionState = PARACHUTING REALLYDAMAGED
    AliasConditionState = PARACHUTING DYING
    
   ; TransitionState     = TRANS_Falling TRANS_Chute
   ;   Animation         = NIMSST_SKL.NIMSST_POP
   ;   AnimationMode     = ONCE
   ;   Flags             = PRISTINE_BONE_POS_IN_FINAL_FRAME  ; our bone positions should come from the last frame, rather than the first
   ; End
    
    TransitionState     = TRANS_Chute TRANS_Stand
      Animation         = NIMSST_SKL.NIMSST_PDN
      AnimationMode     = ONCE
    End

  End


  ; ***DESIGN parameters ***
  DisplayName      = OBJECT:TankHunter
  Side = China
  EditorSorting = INFANTRY
  TransportSlotCount = 1                 ;how many "slots" we take in a transport (0 == not transportable)
  WeaponSet
    Conditions = None 
    Weapon = PRIMARY ChinaInfantryTankHunterMissileLauncher
  End
  ArmorSet
    Conditions      = None
    Armor           = HumanArmor
    DamageFX        = InfantryDamageFX
  End

  ArmorSet
    Conditions      = PLAYER_UPGRADE
    Armor           = ChemSuitHumanArmor
    DamageFX        = InfantryDamageFX
  End
  VisionRange = 220
  ShroudClearingRange = 200
  Prerequisites
    Object = ChinaBarracks
  End
  BuildCost = 200
  BuildTime = 7          ;in seconds    

  ExperienceValue         = 25 25 45 70  ;Experience point value at each level
  ExperienceRequired      = 0 50 150 250   ;Experience points needed to gain each level
  IsTrainable = Yes             ;Can gain experience
  CrushableLevel         = 0  ;What am I?:        0 = for infantry, 1 = for trees, 2 = general vehicles
  CommandSet      = ChinaInfantryTankHunterCommandSet

  ; *** AUDIO Parameters ***
  VoiceSelect = TankHunterVoiceSelect
  VoiceMove = TankHunterVoiceMove
  VoiceAttack = TankHunterVoiceAttack
  VoiceAttackAir = TankHunterVoiceAttack
  VoiceGuard = TankHunterVoiceMove
  VoiceFear = TankHunterVoiceFear
  UnitSpecificSounds
    VoiceCreate          = TankHunterVoiceCreate
    VoiceGarrison = TankHunterVoiceGarrison
    VoiceEnter = TankHunterVoiceMove
    VoiceEnterHostile = TankHunterVoiceMove
    VoiceGetHealed      = TankHunterVoiceMove
  End

  ; *** ENGINEERING Parameters ***
  RadarPriority = UNIT
  KindOf = PRELOAD SELECTABLE CAN_ATTACK ATTACK_NEEDS_LINE_OF_SIGHT CAN_CAST_REFLECTIONS INFANTRY SCORE

  Body = ActiveBody ModuleTag_02
    MaxHealth       = 110.0
    InitialHealth   = 110.0
  End

  Behavior = AIUpdateInterface ModuleTag_03
    AutoAcquireEnemiesWhenIdle = Yes
    MoodAttackCheckRate        = 750
  End
  Locomotor = SET_NORMAL ChinaLocomotorI2
  Locomotor = SET_NORMAL_UPGRADED ChinaLocomotorI2B

  Behavior = HordeUpdate ModuleTag_04
    RubOffRadius = 60    ; if I am this close to a real hordesman, I will get to be an honorary hordesman
    UpdateRate = 1000    ; how often to recheck horde status (msec)
    Radius = 50          ; how close other units must be to us to count towards our horde-ness (~30 feet or so)
    KindOf = INFANTRY    ; what KindOf's must match to count towards horde-ness
    AlliesOnly = Yes     ; do we only count allies towards horde status? 
    ExactMatch = No      ; do we only count units of our exact same type towards horde status? (overrides kindof)
    Count = 5            ; how many units must be within Radius to grant us horde-ness
    Action = HORDE       ; when horde-ing, grant us the HORDE bonus
  End
  Behavior = PhysicsBehavior ModuleTag_05
    Mass = 5.0
  End

;Upgrades----------------------------------------------------------
  Behavior = LocomotorSetUpgrade Upgrade_01
    TriggeredBy = Upgrade_BallisticCommandset
  End  
  Behavior                = ArmorUpgrade ModuleTag_Armor01
    TriggeredBy           = Upgrade_China_ChemSuits
  End
;Deaths-------------------------------------------------------------
  Behavior = SlowDeathBehavior DeathTag_01
    DeathTypes          = ALL -CRUSHED -SPLATTED -EXPLODED -BURNED -POISONED -POISONED_BETA -POISONED_GAMMA
    SinkDelay           = 3000
    SinkRate            = 0.5     ; in Dist/Sec
    DestructionDelay    = 8000
    FX                  = INITIAL FX_SoldierDie
  End
  Behavior = SlowDeathBehavior DeathTag_02
    DeathTypes          = NONE +CRUSHED +SPLATTED
    SinkDelay           = 3000
    SinkRate            = 0.5     ; in Dist/Sec
    DestructionDelay    = 8000
    FX                  = INITIAL FX_GIDieCrushed
  End
  Behavior = SlowDeathBehavior DeathTag_03
    DeathTypes          = NONE +EXPLODED
    SinkDelay           = 3000
    SinkRate            = 0.5     ; in Dist/Sec
    DestructionDelay    = 8000
    FX                  = INITIAL FX_SoldierDie
    FlingForce          = 8
    FlingForceVariance  = 3
    FlingPitch          = 60
    FlingPitchVariance  = 10
  End
  Behavior = SlowDeathBehavior DeathTag_04
    DeathTypes          = NONE +BURNED
    DestructionDelay    = 0
    FX                  = INITIAL FX_DieByFireChina
    OCL                 = INITIAL OCL_FlamingInfantry
  End
  Behavior = SlowDeathBehavior DeathTag_05
    DeathTypes          = NONE +POISONED
    DestructionDelay    = 0
    FX                  = INITIAL FX_DieByToxinChina
    OCL                 = INITIAL OCL_ToxicInfantry
  End
  Behavior = SlowDeathBehavior DeathTag_06 ; don't forget to give it a new, unique module tag
    DeathTypes          = NONE +POISONED_BETA
    DestructionDelay    = 0
    FX                  = INITIAL FX_DieByToxinChina
    OCL                 = INITIAL OCL_ToxicInfantryBeta ;you'll have to create this OCL and make it use the blue guys instead of green ones
  End
  Behavior = SlowDeathBehavior DeathTag_07
    DeathTypes          = NONE +POISONED_GAMMA
    DestructionDelay    = 0
    FX                  = INITIAL FX_DieByToxinChina
    OCL                 = INITIAL OCL_ToxicInfantryGamma
  End

;Stealth-------------------------------------------------------------
;---------------------------------------------------------------------

  Behavior = SpecialAbility ModuleTag_06
    SpecialPowerTemplate = SpecialAbilityTankHunterTNTAttack
    UpdateModuleStartsAttack = Yes
    InitiateSound = TankHunterVoiceTNT
  End
  Behavior = SpecialAbilityUpdate ModuleTag_07
    SpecialPowerTemplate = SpecialAbilityTankHunterTNTAttack
    StartAbilityRange = 5.0
    PreparationTime = 0
    SpecialObject = TNTStickyBomb
    MaxSpecialObjects = 8
    SpecialObjectsPersistWhenOwnerDies = Yes ;Charges are removed instantly when owner dies (nobody can detonate).
    SpecialObjectsPersistent = Yes          ;Charges are persistent till lifetime expires or owner detonates them.
    UniqueSpecialObjectTargets = Yes        ;This prevents multiple charges placed on the same object.
    FleeRangeAfterCompletion = 100.0         ;Runs away after finishing ability
  End

 
  Behavior = SquishCollide ModuleTag_08
    ;nothing
  End

  Behavior = PoisonedBehavior ModuleTag_09
    PoisonDamageInterval = 100  ; Every this many msec I will retake the poison damage dealt me...
    PoisonDuration = 3000       ; ... for this long after last hit by poison damage
  End

  Behavior = StealthUpdate ModuleStealth_GPSScramblerGenericStealthModule
    StealthDelay                = 2000 ; msec
    InnateStealth               = Yes
    StealthForbiddenConditions  = ATTACKING USING_ABILITY
    OrderIdleEnemiesToAttackMeUponReveal  = Yes
    RequiredStatus = REASSIGN_PARKING
  End
 
  Geometry = CYLINDER
  GeometryMajorRadius = 6.0
  GeometryMinorRadius = 6.0
  GeometryHeight = 12.0
  GeometryIsSmall = Yes
  Shadow = SHADOW_DECAL
  ShadowSizeX = 14;
  ShadowSizeY = 14;
  ShadowTexture = ShadowI;
  BuildCompletion = APPEARS_AT_RALLY_POINT

End